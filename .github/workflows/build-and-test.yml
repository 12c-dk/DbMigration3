name: Build and Test with DevContainer

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
      - 'feature/*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "quoosugTh5"
          ACCEPT_EULA: "Y"
        ports:
          - 6001:1433
        options: > 
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'quoosugTh5' -Q 'SELECT 1'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build DevContainer
      run: |
        docker build -t devcontainer .devcontainer

    - name: Install .NET 6 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'

    # Implement retry mechanism using bash to wait for SQL Server to be ready
    - name: Wait for SQL Server to be ready
      run: |
        for i in {1..10}; do
          if docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'quoosugTh5' -Q "SELECT 1"; then
            echo "SQL Server is ready!";
            break;
          else
            echo "Waiting for SQL Server... retrying in 10 seconds";
            sleep 10;
          fi
        done

    - name: Restore dependencies
      run: dotnet restore src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj

    - name: Build the solution
      run: dotnet build src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj --no-restore --configuration Release

    - name: Run Tests
      env:
        ConnectionStrings__DefaultConnection: "Server=localhost,6001;Database=TestDb;User Id=sa;Password=quoosugTh5;"
      run: dotnet test src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj --no-restore --configuration Release
