name: Build and Test with DevContainer

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
      - 'feature/*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - name: Start services using Docker Compose
      run: docker-compose -f .devcontainer/docker-compose.yml up -d

    # - name: Build DevContainer
    #   run: |
    #     docker build -t devcontainer .devcontainer

    # - name: Install .NET 6 SDK
    #   uses: actions/setup-dotnet@v3
    #   with:
    #     dotnet-version: '6.x'

    - name: Install SQL Server command-line tools
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        sudo add-apt-repository "$(curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list)"
        sudo apt-get update
        sudo apt-get install -y mssql-tools unixodbc-dev
        echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
        source ~/.bashrc

    - name: Wait for SQL Server to be ready from host
      run: |
        for i in {1..10}; do
          echo "Attempt $i: Checking if SQL Server is ready..."
          /opt/mssql-tools/bin/sqlcmd -S localhost,6000 -U SA -P 'quoosugTh5' -Q "SELECT 1" 2>&1
          if [ $? -eq 0 ]; then
            echo "SQL Server is ready!";
            break;
          else
            echo "Waiting for SQL Server... retrying in 10 seconds";
            /opt/mssql-tools/bin/sqlcmd -S localhost,6000 -U SA -P 'quoosugTh5' -Q "SELECT 1" 2>&1 || true
            docker ps
            sleep 10;
          fi
        done

    - name: Restore dependencies
      run: dotnet restore src/AllProjects.sln

    - name: Build the solution
      run: dotnet build src/AllProjects.sln --no-restore --configuration Release

    - name: Run Tests
      env:
        ConnectionStrings__DefaultConnection: "Server=0.0.0.0,1433;Database=TestDb;User Id=sa;Password=${{ secrets.SA_PASSWORD }};"
      run: dotnet test src/AllProjects.sln --no-restore --configuration Release
