name: Build and Test with DevContainer

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
      - 'feature/*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # Add a SQL Server service using a Docker container
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "quoosugTh5"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: > 
          --health-cmd "exit 0" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build DevContainer
      run: |
        docker build -t devcontainer .devcontainer

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x' # Adjust version according to your project

    # Wait for SQL Server to be ready before running the tests
    - name: Wait for SQL Server to be ready
      run: |
        docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'quoosugTh5' -Q "SELECT 1"
      retry: 5 # Retry to ensure SQL Server is ready before proceeding

    - name: Restore dependencies
      run: dotnet restore src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj

    - name: Build the solution
      run: dotnet build src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj --no-restore --configuration Release

    - name: Run Tests
      env:
        ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=SourceDb;User Id=sa;Password=quoosugTh5;"
      run: dotnet test src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj --no-restore --configuration Release
