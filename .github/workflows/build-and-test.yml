name: Build and Test with DevContainer

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
      - 'feature/*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # services:
    #   sqlserver:
    #     image: mcr.microsoft.com/mssql/server:latest
    #     env:
    #       SA_PASSWORD: quoosugTh5
    #       ACCEPT_EULA: Y
    #     ports:
    #       - 1433:1433
    #     options: >
    #       --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'quoosugTh5' -Q 'SELECT 1'" --health-interval=10s --health-timeout=5s --health-retries=5 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - name: Start services using Docker Compose
      run: docker-compose -f .devcontainer/docker-compose.yml up -d


    # - name: Build DevContainer
    #   run: |
    #     docker build -t devcontainer .devcontainer

    - name: Install .NET 6 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x'

    - name: Wait for SQL Server to be ready
      run: |
        for i in {1..10}; do
          output=$(docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S 0.0.0.0:6000 -U SA -P 'quoosugTh5' -Q "SELECT 1" 2>&1)
          if echo "$output" | grep -q "1 rows affected"; then
            echo "SQL Server is ready!";
            break;
          else
            echo "Waiting for SQL Server... retrying in 10 seconds";
            echo "Output from sqlcmd: $output";
            docker ps
            sleep 10;
          fi
        done

    - name: Restore dependencies
      run: dotnet restore src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj

    - name: Build the solution
      run: dotnet build src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj --no-restore --configuration Release

    - name: Run Tests
      env:
        ConnectionStrings__DefaultConnection: "Server=0.0.0.0,1433;Database=TestDb;User Id=sa;Password=${{ secrets.SA_PASSWORD }};"
      run: dotnet test src/Adapter.Sql.Tests/Adapter.Sql.Tests.csproj --no-restore --configuration Release